<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2025-07-15T09:22:27.959Z" hostname="BOOK-23GFMNCR12" time="0.711">
  <properties/>
  <testcase name="validToken() : 만료된 토큰인 때에 유효성 검증에 실패한다." classname="hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest" time="0.341"/>
  <testcase name="getAuthentication() : 토큰 기반으로 인증 정보를 가져올 수 있다" classname="hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest" time="0.274"/>
  <testcase name="getUserId() : 토큰으로 유저 ID를 가져올 수 있다." classname="hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest" time="0.055"/>
  <testcase name="generateToken() : 유저 정보와 만료 기간을 전달해 토큰을 만들수 있다." classname="hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest" time="0.033"/>
  <system-out><![CDATA[2025-07-15T18:22:24.203+09:00  INFO 25564 --- [ADHDay] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest]: JwtTokenProviderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-15T18:22:24.248+09:00  INFO 25564 --- [ADHDay] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration hannah.mind.ADHDay.AdhDayApplication for test class hannah.mind.ADHDay.config.jwt.JwtTokenProviderTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-07-15T18:22:24.407+09:00  INFO 25564 --- [ADHDay] [    Test worker] h.m.A.config.jwt.JwtTokenProviderTest    : Starting JwtTokenProviderTest using Java 17.0.12 with PID 25564 (started by jhjoo in C:\Users\jhjoo\codePractice\ADHDay)
2025-07-15T18:22:24.407+09:00  INFO 25564 --- [ADHDay] [    Test worker] h.m.A.config.jwt.JwtTokenProviderTest    : The following 1 profile is active: "test"
2025-07-15T18:22:26.113+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-15T18:22:26.115+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-07-15T18:22:26.160+09:00  INFO 25564 --- [ADHDay] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface hannah.mind.ADHDay.domain.account.AccountRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-07-15T18:22:26.160+09:00  INFO 25564 --- [ADHDay] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface hannah.mind.ADHDay.domain.assessments.UserAssessmentAnswerRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-07-15T18:22:26.160+09:00  INFO 25564 --- [ADHDay] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface hannah.mind.ADHDay.domain.assessments.UserAssessmentRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-07-15T18:22:26.160+09:00  INFO 25564 --- [ADHDay] [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface hannah.mind.ADHDay.domain.user.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-07-15T18:22:26.160+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
2025-07-15T18:22:26.171+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-15T18:22:26.171+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T18:22:26.290+09:00  INFO 25564 --- [ADHDay] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 115 ms. Found 4 JPA repository interfaces.
2025-07-15T18:22:26.527+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T18:22:26.562+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T18:22:26.622+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T18:22:26.630+09:00  INFO 25564 --- [ADHDay] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2025-07-15T18:22:26.632+09:00  INFO 25564 --- [ADHDay] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-07-15T18:22:26.632+09:00  INFO 25564 --- [ADHDay] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2025-07-15T18:22:26.634+09:00  WARN 25564 --- [ADHDay] [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-15T18:22:26.636+09:00  INFO 25564 --- [ADHDay] [    Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T18:22:26.868+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists account cascade 
Hibernate: drop table if exists account_account_types cascade 
Hibernate: drop table if exists user_assessment cascade 
Hibernate: drop table if exists user_assessment_answer cascade 
Hibernate: drop table if exists users cascade 
Hibernate: create table account (id bigint generated by default as identity, email varchar(255) not null unique, password varchar(255), status enum ('ACTIVE','DELETED','INACTIVE'), primary key (id))
Hibernate: create table account_account_types (account_id bigint not null, account_types enum ('ROLE_ADMIN','ROLE_USER'))
Hibernate: create table user_assessment (id bigint generated by default as identity, submitted_at timestamp(6), updated_at timestamp(6), user_id bigint, description varchar(255), expectations varchar(255), last_step varchar(255), assessment_type enum ('ASRS','GAD7','PHQ9') not null, status enum ('IN_PROGRESS','SUBMITTED') not null, primary key (id))
Hibernate: create table user_assessment_answer (question_id integer not null, score integer not null, id bigint generated by default as identity, user_assessment_id bigint, primary key (id))
Hibernate: create table users (account_id bigint not null unique, created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), bio varchar(255), email varchar(255) not null unique, nickname varchar(255) not null, primary key (id))
Hibernate: alter table if exists account_account_types add constraint FKepamu6tuxm8li57cn936xcb73 foreign key (account_id) references account
Hibernate: alter table if exists user_assessment add constraint FKc8fr045779g8xdgihfeg4atgk foreign key (user_id) references users
Hibernate: alter table if exists user_assessment_answer add constraint FKf3waa6vk6n9idje1nn307rklo foreign key (user_assessment_id) references user_assessment
Hibernate: alter table if exists users add constraint FK3pwaj86pwopu3ot96qlrfo2up foreign key (account_id) references account
2025-07-15T18:22:26.912+09:00  INFO 25564 --- [ADHDay] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T18:22:27.028+09:00  WARN 25564 --- [ADHDay] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-15T18:22:27.049+09:00  INFO 25564 --- [ADHDay] [    Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name accountDetailsService
2025-07-15T18:22:27.483+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-07-15T18:22:27.881+09:00  INFO 25564 --- [ADHDay] [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-15T18:22:27.952+09:00  INFO 25564 --- [ADHDay] [    Test worker] h.m.A.config.jwt.JwtTokenProviderTest    : Started JwtTokenProviderTest in 3.693 seconds (process running for 59.352)
Hibernate: insert into account (email,password,status,id) values (?,?,?,default)
Hibernate: insert into account_account_types (account_id,account_types) values (?,?)
Hibernate: select a1_0.id,a1_0.email,a1_0.password,a1_0.status from account a1_0 where a1_0.email=?
Hibernate: select u1_0.id,u1_0.account_id,a1_0.id,at1_0.account_id,at1_0.account_types,a1_0.email,a1_0.password,a1_0.status,u1_0.bio,u1_0.created_at,u1_0.email,u1_0.nickname,u1_0.updated_at from users u1_0 join account a1_0 on a1_0.id=u1_0.account_id left join account_account_types at1_0 on a1_0.id=at1_0.account_id where u1_0.account_id=?
Hibernate: select at1_0.account_id,at1_0.account_types from account_account_types at1_0 where at1_0.account_id=?
Hibernate: insert into account (email,password,status,id) values (?,?,?,default)
Hibernate: insert into account_account_types (account_id,account_types) values (?,?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
